Talk-driven development : Teaching can be a superpower in software engineering


"Engaging in 'Talk-Driven Development' involves dedicating oneself to articulating thoughts on a specific subject, a practice that often leads developers to discover new insights while delving into the realms of cutting-edge technologies in anticipation of a presentation.

Beyond its immediate relevance to software development, teaching possesses transformative powers that extend into various domains. Extensive research supports the existence of the Protégé Effect, a psychological phenomenon wherein individuals who teach or prepare to teach others attain a profound understanding of the material at hand.

Consistently sharing insights with a community not only fosters personal growth but also deepens one's technical expertise. Simultaneously, it hones communication skills, enabling the effective elucidation of novel concepts to others.

In my public sharing endeavors, I aim to spotlight those 'aha' moments or lightbulb realizations where the knowledge gained becomes something I fervently wish I had known earlier."
A study published in Memory & Cognition in 2014 determined that just the expectation that one will need to teach can enhance one’s learning and organization of knowledge.


Ref: https://www.growthengineering.co.uk/protege-effect/

https://github.com/readme/guides/public-documentation

Share Your Learnings at a Sustainable Pace




Codus Operandi
How to Increase Your Luck Surface Area
"Luck Surface Area" is a turn of phrase that popped out my mouth during a discussion episode of TechZing a few months back and is something I've been meaning to write about ever since but never got around to actually doing. However, thanks to Lance Jones who referenced the concept in a recent blog post I have finally been spurred into action.


The protégé effect is a concept in learning that suggests we learn more effectively by teaching information to others, even if those others aren’t necessarily any less knowledgeable. As author Robert Heinlein puts it, ‘when one teaches, two learn’.


The law of averages refers the common belief that the relative frequency of an event should correspond to its probability. For example, if the probability of heads in a fair coin toss is 50%, then according to the law of averages, the proportion of heads in a series of tosses should be close to 50%.


Jason Roberts : https://twitter.com/exojason?lang=en
Coder, entrepreneur, and podcaster 
@techzing
. Wrote a lot of the original real-time tech at http://uber.com. Coined "luck surface area". Founder of http://mathacademy.com.


https://modelthinkers.com/mental-model/surface-area-of-luck


Tina Seelig, Stanford professor and the creator of Framestorming, has been studying entrepreneurs and luck for some time. Her reframing of how to view luck aligns well with this model. Seelig explains: “Luck is rarely a lightning strike, isolated and dramatic. It’s much more like the wind, blowing constantly. Sometimes it’s calm, and sometimes it blows in gusts. And sometimes it comes from directions that you didn’t even imagine.


https://www.swyx.io/create-luck


https://www.linkedin.com/pulse/prot%C3%A9g%C3%A9-effect-why-teaching-someone-else-best-way-learn-simmons/


"If you think you know everything, you will learn nothing. If you think you know nothing, you will learn everything."
Have you ever felt that you knew something, but then got tongue tied when you tried to explain it to someone else?

This is actually a good thing.

Teaching reveals gaps in our knowledge. When we're aware of those gaps, we become more humble, and we ask more question


“The person who says he knows what he thinks but cannot express it usually does not know what he thinks.” — Mortimer Adler


One of the more surprising findings in the learning sciences is the testing effect.

When we practice retrieving what we have previously learned by trying to recall it from memory rather than simply highlighting it or reviewing it in written form, our retention of the information skyrockets. In other words, every time we pull up a memory, we make it stronger and longer lasting.


SODOTO (See One, Do One, Teach One) is a methodology of teaching and learning skills and best practices through direct observation of a task, hands-on practical experience performing the task and teaching the task to another person.